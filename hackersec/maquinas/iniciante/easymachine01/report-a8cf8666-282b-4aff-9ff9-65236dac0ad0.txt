I Summary
=========

This document reports on the results of an automatic security scan.
The report first summarises the results found.
Then, for each host, the report describes every issue found.
Please consider the advice given in each description, in order to rectify
the issue.

All dates are displayed using the timezone "America/Sao_Paulo",
which is abbreviated "-03".

Vendor security updates are not trusted.

Overrides are off.  Even when a result has an override, this report uses
the actual threat of the result.

Notes are included in the report.Information on overrides is included in the report.

This report might not show details of all issues that were found.
Issues with the threat level "Log" are not shown.
Issues with the threat level "Debug" are not shown.
Issues with the threat level "False Positive" are not shown.
Only results with a minimum QoD of 70 are shown.

This report contains all 7 results selected by the
filtering described above.  Before filtering there were 67 results.

Scan started: Thu Jul 21 16:51:48 2022 -03
Scan ended:   Thu Jul 21 17:20:44 2022 -03
Task:         Immediate scan of IP 10.0.0.27

Host Summary
************

Host            High  Medium  Low  Log  False Positive
10.0.0.27          1       4    2    0               0
Total: 1           1       4    2    0               0


II Results per Host
===================

Host 10.0.0.27
**************

Scanning of this host started at: Thu Jul 21 16:52:17 2022 -03
Number of results: 7

Port Summary for Host 10.0.0.27
-------------------------------

Service (Port)          Threat Level
22/tcp                  Medium
general/tcp             High
80/tcp                  Medium

Security Issues for Host 10.0.0.27
----------------------------------

Issue
-----
NVT:    Operating System (OS) End of Life (EOL) Detection
OID:    1.3.6.1.4.1.25623.1.0.103674
Threat: High (CVSS: 10.0)
Port:   general/tcp

Product detection result: cpe:/o:canonical:ubuntu_linux:12.04
Detected by: OS Detection Consolidation and Reporting (OID: 1.3.6.1.4.1.25623.1.0.105937)

Summary:
The Operating System (OS) on the remote host has reached the End
  of Life (EOL) and should not be used anymore.

Vulnerability Detection Result:
The "Ubuntu" Operating System on the remote host has reached the end of life.
CPE:               cpe:/o:canonical:ubuntu_linux:12.04
Installed version,
build or SP:       12.04
EOL date:          2017-04-28
EOL info:          https://wiki.ubuntu.com/Releases

Impact:
An EOL version of an OS is not receiving any security updates
  from the vendor. Unfixed security vulnerabilities might be leveraged by an att!
acker to compromise
  the security of this host.

Solution:
Solution type: Mitigation
Upgrade the OS on the remote host to a version which is still
  supported and receiving security updates by the vendor.

Vulnerability Detection Method:
Checks if an EOL version of an OS is present on the target
  host.
Details:
Operating System (OS) End of Life (EOL) Detection
(OID: 1.3.6.1.4.1.25623.1.0.103674)
Version used: 2022-04-05T13:00:52Z

Product Detection Result:
Product:cpe:/o:canonical:ubuntu_linux:12.04

Method:OS Detection Consolidation and Reporting
(OID: 1.3.6.1.4.1.25623.1.0.105937)


Issue
-----
NVT:    Weak Host Key Algorithm(s) (SSH)
OID:    1.3.6.1.4.1.25623.1.0.117687
Threat: Medium (CVSS: 5.3)
Port:   22/tcp

Summary:
The remote SSH server is configured to allow / support weak host
  key algorithm(s).

Vulnerability Detection Result:
The remote SSH server supports the following weak host key algorithm(s):
host key algorithm | Description
--------------------------------------------------------------------------------!
---------
ssh-dss            | Digital Signature Algorithm (DSA) / Digital Signature Stand!
ard (DSS)

Solution:
Solution type: Mitigation
Disable the reported weak host key algorithm(s).

Vulnerability Detection Method:
Checks the supported host key algorithms of the remote SSH
  server.
  Currently weak host key algorithms are defined as the following:
  - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS!
)
Details:
Weak Host Key Algorithm(s) (SSH)
(OID: 1.3.6.1.4.1.25623.1.0.117687)
Version used: 2021-11-24T06:31:19Z


Issue
-----
NVT:    Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)
OID:    1.3.6.1.4.1.25623.1.0.150713
Threat: Medium (CVSS: 5.3)
Port:   22/tcp

Summary:
The remote SSH server is configured to allow / support weak key
  exchange (KEX) algorithm(s).

Vulnerability Detection Result:
The remote SSH server supports the following weak KEX algorithm(s):
KEX algorithm                      | Reason
--------------------------------------------------------------------------------!
-----------
diffie-hellman-group-exchange-sha1 | Using SHA-1
diffie-hellman-group1-sha1         | Using Oakley Group 2 (a 1024-bit MODP group!
) and SHA-1

Impact:
An attacker can quickly break individual connections.

Solution:
Solution type: Mitigation
Disable the reported weak KEX algorithm(s)
  - 1024-bit MODP group / prime KEX algorithms:
  Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.

Vulnerability Insight:
- 1024-bit MODP group / prime KEX algorithms:
  Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Dif!
fie-Hellman key
  exchange. Practitioners believed this was safe as long as new key exchange mes!
sages were generated
  for every connection. However, the first step in the number field sieve-the mo!
st efficient
  algorithm for breaking a Diffie-Hellman connection-is dependent only on this p!
rime.
  A nation-state can break a 1024-bit prime.

Vulnerability Detection Method:
Checks the supported KEX algorithms of the remote SSH server.
  Currently weak KEX algorithms are defined as the following:
  - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP gr!
oup / prime
  - ephemerally generated key exchange groups uses SHA-1
  - using RSA 1024-bit modulus key
Details:
Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)
(OID: 1.3.6.1.4.1.25623.1.0.150713)
Version used: 2021-11-24T06:31:19Z

References:
 url: https://weakdh.org/sysadmin.html
 url: https://tools.ietf.org/id/draft-ietf-curdle-ssh-kex-sha2-09.html
 url: https://tools.ietf.org/id/draft-ietf-curdle-ssh-kex-sha2-09.html#rfc.section.5
 url: https://datatracker.ietf.org/doc/html/rfc6194


Issue
-----
NVT:    Weak Encryption Algorithm(s) Supported (SSH)
OID:    1.3.6.1.4.1.25623.1.0.105611
Threat: Medium (CVSS: 4.3)
Port:   22/tcp

Summary:
The remote SSH server is configured to allow / support weak
  encryption algorithm(s).

Vulnerability Detection Result:
The remote SSH server supports the following weak client-to-server encryption al!
gorithm(s):
3des-cbc
aes128-cbc
aes192-cbc
aes256-cbc
arcfour
arcfour128
arcfour256
blowfish-cbc
cast128-cbc
rijndael-cbc@lysator.liu.se
The remote SSH server supports the following weak server-to-client encryption al!
gorithm(s):
3des-cbc
aes128-cbc
aes192-cbc
aes256-cbc
arcfour
arcfour128
arcfour256
blowfish-cbc
cast128-cbc
rijndael-cbc@lysator.liu.se

Solution:
Solution type: Mitigation
Disable the reported weak encryption algorithm(s).

Vulnerability Insight:
- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit
  keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCH!
NEIER]. Arcfour
  (and RC4) has problems with weak keys, and should not be used anymore.
  - The 'none' algorithm specifies that no encryption is to be done. Note that t!
his method provides
  no confidentiality protection, and it is NOT RECOMMENDED to use it.
  - A vulnerability exists in SSH messages that employ CBC mode that may allow a!
n attacker to
  recover plaintext from a block of ciphertext.

Vulnerability Detection Method:
Checks the supported encryption algorithms (client-to-server
  and server-to-client) of the remote SSH server.
  Currently weak encryption algorithms are defined as the following:
  - Arcfour (RC4) cipher based algorithms
  - none algorithm
  - CBC mode cipher based algorithms
Details:
Weak Encryption Algorithm(s) Supported (SSH)
(OID: 1.3.6.1.4.1.25623.1.0.105611)
Version used: 2021-09-20T08:25:27Z

References:
 url: https://tools.ietf.org/html/rfc4253#section-6.3
 url: https://www.kb.cert.org/vuls/id/958563


Issue
-----
NVT:    Apache HTTP Server ETag Header Information Disclosure Weakness
OID:    1.3.6.1.4.1.25623.1.0.103122
Threat: Medium (CVSS: 4.3)
Port:   80/tcp

Product detection result: cpe:/a:apache:http_server:2.2.22
Detected by: Apache HTTP Server Detection Consolidation (OID: 1.3.6.1.4.1.25623.1.0.117232)

Summary:
A weakness has been discovered in the Apache HTTP Server
  if configured to use the FileETag directive.

Vulnerability Detection Result:
Information that was gathered:
Inode: 153327
Size: 836

Impact:
Exploitation of this issue may provide an attacker with
  information that may be used to launch further attacks against a target networ!
k.

Solution:
Solution type: VendorFix
OpenBSD has released a patch that addresses this issue.
  Inode numbers returned from the server are now encoded using a private hash to!
 avoid the
  release of sensitive information.
  Novell has released TID10090670 to advise users to apply the available workaro!
und of
  disabling the directive in the configuration file for Apache releases on NetWa!
re. Please
  see the attached Technical Information Document for further details.

Vulnerability Detection Method:
Due to the way in which Apache HTTP Server generates
  ETag response headers, it may be possible for an attacker to obtain sensitive !
information
  regarding server files. Specifically, ETag header fields returned to a client !
contain the
  file's inode number.
Details:
Apache HTTP Server ETag Header Information Disclosure Weakness
(OID: 1.3.6.1.4.1.25623.1.0.103122)
Version used: 2022-04-28T13:38:57Z

Product Detection Result:
Product:cpe:/a:apache:http_server:2.2.22

Method:Apache HTTP Server Detection Consolidation
(OID: 1.3.6.1.4.1.25623.1.0.117232)

References:
 cve: CVE-2003-1418
 url: http://www.securityfocus.com/bid/6939
 url: http://httpd.apache.org/docs/mod/core.html#fileetag
 url: http://www.openbsd.org/errata32.html
 url: http://support.novell.com/docs/Tids/Solutions/10090670.html
 cert-bund: CB-K17/1750
 cert-bund: CB-K17/0896
 cert-bund: CB-K15/0469
 dfn-cert: DFN-CERT-2017-1821
 dfn-cert: DFN-CERT-2017-0925
 dfn-cert: DFN-CERT-2015-0495


Issue
-----
NVT:    Weak MAC Algorithm(s) Supported (SSH)
OID:    1.3.6.1.4.1.25623.1.0.105610
Threat: Low (CVSS: 2.6)
Port:   22/tcp

Summary:
The remote SSH server is configured to allow / support weak MAC
  algorithm(s).

Vulnerability Detection Result:
The remote SSH server supports the following weak client-to-server MAC algorithm!
(s):
hmac-md5
hmac-md5-96
hmac-sha1-96
hmac-sha2-256-96
hmac-sha2-512-96
The remote SSH server supports the following weak server-to-client MAC algorithm!
(s):
hmac-md5
hmac-md5-96
hmac-sha1-96
hmac-sha2-256-96
hmac-sha2-512-96

Solution:
Solution type: Mitigation
Disable the reported weak MAC algorithm(s).

Vulnerability Detection Method:
Checks the supported MAC algorithms (client-to-server and
  server-to-client) of the remote SSH server.
  Currently weak MAC algorithms are defined as the following:
  - MD5 based algorithms
  - 96-bit based algorithms
  - none algorithm
Details:
Weak MAC Algorithm(s) Supported (SSH)
(OID: 1.3.6.1.4.1.25623.1.0.105610)
Version used: 2021-09-20T11:05:40Z


Issue
-----
NVT:    TCP timestamps
OID:    1.3.6.1.4.1.25623.1.0.80091
Threat: Low (CVSS: 2.6)
Port:   general/tcp

Summary:
The remote host implements TCP timestamps and therefore allows to compute
  the uptime.

Vulnerability Detection Result:
It was detected that the host implements RFC1323/RFC7323.
The following timestamps were retrieved with a delay of 1 seconds in-between:
Packet 1: 96901858
Packet 2: 96902134

Impact:
A side effect of this feature is that the uptime of the remote
  host can sometimes be computed.

Solution:
Solution type: Mitigation
To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to
  /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime.
  To disable TCP timestamps on Windows execute 'netsh int tcp set global timesta!
mps=disabled'
  Starting with Windows Server 2008 and Vista, the timestamp can not be complete!
ly disabled.
  The default behavior of the TCP/IP stack on this Systems is to not use the
  Timestamp options when initiating TCP connections, but use them if the TCP pee!
r
  that is initiating communication includes them in their synchronize (SYN) segm!
ent.
  See the references for more information.

Affected Software/OS:
TCP implementations that implement RFC1323/RFC7323.

Vulnerability Insight:
The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.

Vulnerability Detection Method:
Special IP packets are forged and sent with a little delay in between to the
  target IP. The responses are searched for a timestamps. If found, the timestam!
ps are reported.
Details:
TCP timestamps
(OID: 1.3.6.1.4.1.25623.1.0.80091)
Version used: 2020-08-24T08:40:10Z

References:
 url: http://www.ietf.org/rfc/rfc1323.txt
 url: http://www.ietf.org/rfc/rfc7323.txt
 url: https://web.archive.org/web/20151213072445/http://www.microsoft.com/en-us/download/details.aspx?id=9152


